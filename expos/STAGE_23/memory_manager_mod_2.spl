alias funcNum R1;
//----------------------get free page--------------------------------------
if(funcNum==1) then
	alias currentPID R2;
	R2=[SYSTEM_STATUS_TABLE+1];

//incrementing WAIT_MEM_COUNT in system status table. it is 4th word of SST
	[SYSTEM_STATUS_TABLE+3]=[SYSTEM_STATUS_TABLE+3]+1;

//MEM_FREE_COUNT will be 0 when memory is full. it is 3rd word of SST
	while([SYSTEM_STATUS_TABLE+2]==0) do
		[PROCESS_TABLE+currentPID*16+4]=WAIT_MEM;
		multipush(R1,R2);
		call MOD_5;
		multipop(R1,R2);
	endwhile;
	[SYSTEM_STATUS_TABLE+3]=[SYSTEM_STATUS_TABLE+3]-1;
	[SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]-1;
//finding free memory page
	alias iter R2;
	alias FreePage R0;
	iter=83;
	while(iter<128) do
		if([MEMORY_FREE_LIST+iter]==0) then
			[MEMORY_FREE_LIST+iter]=1;
			FreePage=iter;
			return;
		endif;
		iter=iter+1;
	endwhile;
endif;

//----------------------------release page-------------------------------------
if(funcNum==2) then
	alias PageNum R2;
	[MEMORY_FREE_LIST+PageNum]=[MEMORY_FREE_LIST+PageNum]-1;
	if([MEMORY_FREE_LIST+PageNum]==0) then
		[SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]+1;
		alias PID R3;
		PID=2;
		while(PID<=15) do
			if([PROCESS_TABLE+PID*16+4]==WAIT_MEM) then
				[PROCESS_TABLE+PID*16+4]=READY;
			endif;
		PID=PID+1;
		endwhile;
	endif;
	return;
endif;

//------------------------get code page--------------funcNUm=5-----------------
if(funcNum==5) then
	alias blockNum R2;
	alias PID R3;
	alias disk_map_entry R4;
	alias page_table_entry R5;
	alias PID_iter R6;
	alias iter R7;
	PID_iter=1;

	//checking in disk_map_entry and page table if it is already loaded by some other process
	while(PID_iter<=15) do
		disk_map_entry=DISK_MAP_TABLE+PID_iter*10;
		page_table_entry=PAGE_TABLE_BASE+PID_iter*20;
		iter=0;
		while(iter<4) do
			if(([disk_map_entry+4+iter]==blockNum)&&([page_table_entry+8+2*iter]!=-1)) then
				R0=[page_table_entry+8+2*iter];
				[MEMORY_FREE_LIST+R0]=[MEMORY_FREE_LIST+R0]+1;
				return;
			endif;
			iter=iter+1;
		endwhile;
		PID_iter=PID_iter+1;
	endwhile;

	//calling get free page function of module 2 (memory manager)
	multipush(R1,R2,R3);
	R1=1;
	call MOD_2;
	alias freePageNum R4;
	freePageNum=R0;
	multipop(R1,R2,R3);
	
	//calling disk load function of module 4 (device manager)	
	multipush(R1,R2,R3,R4);
	R1=2;
	R5=blockNum;
	//R2 already contains PID
	R2=PID;
	R3=freePageNum;
	R4=R5;
	call MOD_4;
	multipop(R1,R2,R3,R4);
	R0=R4;
	return;
endif;
//--------------------------------------------------------------------------------------------------------------
//---------------------------release block------funcNum=4------------------------------------------------------
if(funcNum==4) then
	alias blockNum R3;
	[DISK_FREE_LIST+blockNum]=[DISK_FREE_LIST+blockNum]-1;
	return;
endif;
	
