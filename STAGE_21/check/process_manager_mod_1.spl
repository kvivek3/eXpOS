alias funcNum R1;
alias currentPID R2;

//------------------------free user area page----------------------------------
if(funcNum==2) then
	alias userAreaPage R3;
	userAreaPage=[PROCESS_TABLE+currentPID*16+11];
	multipush(R1,R2,R3);
	R1=2;
	R2=userAreaPage;
	call MOD_2;
	multipop(R1,R2,R3);
	return;
endif;

//---------------------------------exit process-------------------------------
if(funcNum==3) then
	//calling free pagetable function in memory manager module
	multipush(R1,R2);
	R1=4;
	R2=currentPID;
	call MOD_1;
	multipop(R1,R2);
	multipush(R1,R2);
	R1=2;
	R2=currentPID;
	call MOD_1;
	multipop(R1,R2);
	[PROCESS_TABLE+currentPID*16+4]=TERMINATED;
	return;
endif;

//-------------------------------free page table------------------------------
if(funcNum==4) then
	alias page_table_entry R3;
	page_table_entry=PAGE_TABLE_BASE+currentPID*20;
	[page_table_entry+0]=-1;
	[page_table_entry+1]="0000";
	[page_table_entry+2]=-1;
        [page_table_entry+3]="0000";
	//realeasing other memory pages
	alias iter R4;
	alias pageNum R5;
	iter=2;
	while(iter<10) do
		pageNum=[page_table_entry+2*iter];
		if([page_table_entry+2*iter]!=-1) then
			//calling release page function of module 2 (memory manager)
			multipush(R1,R2,R3,R4,R5);
			R1=2;
			R2=pageNum;
			call MOD_2;
			multipop(R1,R2,R3,R4,R5);
		endif;
		[page_table_entry+2*iter]=-1;
                [page_table_entry+2*iter+1]="0000";
		iter=iter+1;
	endwhile;
	//releasing heap blocks
	if([DISK_MAP_TABLE+currentPID*10+2]!=-1) then

		//calling release block function
		multipush(R1,R2,R3,R4,R5);
		R1=4;
		R2=currentPID;
		R3=[DISK_MAP_TABLE+currentPID*10+2];
		call MOD_2;
		multipop(R1,R2,R3,R4,R5);
	endif;
	if([DISK_MAP_TABLE+currentPID*10+3]!=-1) then

                //calling release block function
                multipush(R1,R2,R3,R4,R5);
                R1=4;
                R2=currentPID;
                R3=[DISK_MAP_TABLE+currentPID*10+3];
                call MOD_2;
                multipop(R1,R2,R3,R4,R5);
        endif;
	//releasing stack blocks
	if([DISK_MAP_TABLE+currentPID*10+8]!=-1) then

                //calling release block function
                multipush(R1,R2,R3,R4,R5);
                R1=4;
                R2=currentPID;
                R3=[DISK_MAP_TABLE+currentPID*10+8];
                call MOD_2;
                multipop(R1,R2,R3,R4,R5);
        endif;
	if([DISK_MAP_TABLE+currentPID*10+9]!=-1) then

                //calling release block function
                multipush(R1,R2,R3,R4,R5);
                R1=4;
                R2=currentPID;
                R3=[DISK_MAP_TABLE+currentPID*10+9];
                call MOD_2;
                multipop(R1,R2,R3,R4,R5);
        endif;
	iter=0;
	while(iter<10) do
		[DISK_MAP_TABLE+currentPID*10+iter]=-1;
		iter=iter+1;
	endwhile;
	return;
endif;
//------------------------------------------------------------------------------------
//---------------------------------Get PCB entry--------funcnum=1---------------------
if(funcNum==1) then
	alias freePCB_index R0;
	freePCB_index=-1;
	alias iter R3;
	iter=2;
	while(iter<16) do
		if([PROCESS_TABLE+iter*16+4]==TERMINATED) then
			freePCB_index=iter;
			[PROCESS_TABLE+iter*16+1]=iter;
			[PROCESS_TABLE+iter*16+4]=ALLOCATED;
			[PROCESS_TABLE+iter*16+14]=PAGE_TABLE_BASE;
			[PROCESS_TABLE+iter*16+15]=10;
			return;
		endif;
		iter=iter+1;
	endwhile;
	return;
endif;
