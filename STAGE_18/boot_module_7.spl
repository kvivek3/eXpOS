//exception handler
loadi(2,15);
loadi(3,16);

//timer
loadi(4,17);
loadi(5,18);

//int 7
loadi(16,29);
loadi(17,30);

//int 6
loadi(14,27);
loadi(15,28);

//console interrupt handler
loadi(8,21);
loadi(9,22);

//disk interrupt handler
loadi(6,19);
loadi(7,20);

//int 9
loadi(20,33);
loadi(21,34);

//int 10
loadi(22,35);
loadi(23,36);

//library
loadi(63,13);
loadi(64,14);

//inode table
loadi(59,3);
loadi(60,4);

//module 0
loadi(40,53);
loadi(41,54);

//module 1
loadi(42,55);
loadi(43,56);

//module 2
loadi(44,57);
loadi(45,58);

//module 4
loadi(48,61);
loadi(49,62);

//terminal status
[TERMINAL_STATUS_TABLE]=0;
//disk status
[DISK_STATUS_TABLE]=0;

//initializing MEMORY_FREE_LIST
alias iter R0;
iter=0;
while(iter<=82) do
	[MEMORY_FREE_LIST+iter]=1;
	iter=iter+1;
endwhile;
while(iter<128) do
	[MEMORY_FREE_LIST+iter]=0;
	iter=iter+1;
endwhile;
[SYSTEM_STATUS_TABLE+3]=0;
[SYSTEM_STATUS_TABLE+2]=45;


//--------------------init program----------------------

//init program
loadi(65,7);
loadi(66,8);

//----page table setting for init program----
PTBR=PAGE_TABLE_BASE+20;
PTLR=10;

//library
[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

//HEAP 
[PTBR+4]=78;
[PTBR+5]="0110";
[PTBR+6]=79;
[PTBR+7]="0110";

//CODE init
[PTBR+8]=65;
[PTBR+9]="0100";
[PTBR+10]=66;
[PTBR+11]="0100";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";

//STACK init
[PTBR+16]=76;
[PTBR+17]="0110";
[PTBR+18]=77;
[PTBR+19]="0110";

//-------process table for init program-------
[PROCESS_TABLE+17]=1;
[PROCESS_TABLE+20]=CREATED;
[PROCESS_TABLE+27]=80;
[PROCESS_TABLE+28]=0;
[PROCESS_TABLE+29]=8*512;
[PROCESS_TABLE+30]=PTBR;
[PROCESS_TABLE+31]=PTLR;
[76*512]=[65*512+1];

//initialising preprocess resource table for init program
iter=81*512-17;
while(iter<(81*512)) do
	[iter]=-1;
	iter=iter+1;
endwhile;

//------------------------second program-----------------------

//code
//loadi(83,69);

//----------------------page table entry for second program-------------------

//PTBR=PAGE_TABLE_BASE+40;
//PTLR=10;

//LIBRARY
//[PTBR+0]=63;
//[PTBR+1]="0100";
//[PTBR+2]=64;
//[PTBR+3]="0100";

//HEAP
//[PTBR+4]=-1;
//[PTBR+5]="0000";
//[PTBR+6]=-1;
//[PTBR+7]="0000";

//CODE
//[PTBR+8]=83;
//[PTBR+9]="0100";
//[PTBR+10]=-1;
//[PTBR+11]="0000";
//[PTBR+12]=-1;
//[PTBR+13]="0000";
//[PTBR+14]=-1;
//[PTBR+15]="0000";

//STACK 
//[PTBR+16]=84;
//[PTBR+17]="0110";
//[PTBR+18]=85;
//[PTBR+19]="0110";

//-----------------------------process table----------------------------
//[PROCESS_TABLE+33]=2;
//[PROCESS_TABLE+36]=CREATED;
//[PROCESS_TABLE+43]=86;
//[PROCESS_TABLE+44]=0;
//[PROCESS_TABLE+45]=8*512;
//[PROCESS_TABLE+46]=PTBR;
//[PROCESS_TABLE+47]=PTLR;
//[84*512]=[83*512+1];

//----------------------module_5-------------------------------
loadi(50,63);
loadi(51,64);

[PROCESS_TABLE+36]=TERMINATED;
[PROCESS_TABLE+52]=TERMINATED;
[PROCESS_TABLE+68]=TERMINATED;
[PROCESS_TABLE+84]=TERMINATED;
[PROCESS_TABLE+100]=TERMINATED;
[PROCESS_TABLE+116]=TERMINATED;
[PROCESS_TABLE+132]=TERMINATED;
[PROCESS_TABLE+148]=TERMINATED;
[PROCESS_TABLE+164]=TERMINATED;
[PROCESS_TABLE+180]=TERMINATED;
[PROCESS_TABLE+196]=TERMINATED;
[PROCESS_TABLE+212]=TERMINATED;
[PROCESS_TABLE+228]=TERMINATED;
[PROCESS_TABLE+244]=TERMINATED;

return;
